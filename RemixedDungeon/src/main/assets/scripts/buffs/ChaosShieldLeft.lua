---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mike.
--- DateTime: 10/20/19 10:35 PM
---

local RPD  = require "scripts/lib/commonClasses"

local buff = require "scripts/lib/buff"

local shields = require "scripts/lib/shields"

return buff.init{
    icon = function(self, buff)
        if self.data.state then
            return 47
        end
        return 48
    end,

    name = function(self, buff)
        if self.data.state then
            return "ShieldBuffReady_Name"
        end
        return "ShieldBuffNotReady_Name"
    end,

    info = function(self, buff)
        if self.data.state then
            return "ShieldBuffReady_Info"
        end
        return "ShieldBuffNotReady_Info"
    end,

    attachTo = function(self, buff, target)
        self.data.state = self.data.state or false
        return true
    end,

    act = function(self,buff)
        if not self.data.state then
            self.data.state = true
            buff.target:buffsUpdated()
        end

        buff:spend(shields.rechargeTime(buff:level(),buff.target:effectiveSTR()))
    end,

    defenceProc = function(self, buff, enemy, damage)
        if self.data.state then -- shield was ready
            local lvl = buff:level()

            if math.random() < shields.blockChance(lvl, buff.target:effectiveSTR()) then
                RPD.topEffect(buff.target:getPos(),"shield_blocked")

                RPD.playSound("body_armor")

                self.data.state = false
                buff.target:buffsUpdated()

                buff:spend(
                        shields.waitAfterBlockTime(
                                buff:level(),
                                buff.target:effectiveSTR()))

                local buffLevel = buff:getSource():level()

                if type(buffLevel) ~= 'number' then
                    buffLevel = 1 --non item source somehow
                end

                local damageBlocked = shields.blockDamage(lvl,buffLevel)

                bearer = buff.target
                local level = enemy:level()

                local healBearer = function()
                    bearer:heal(damageBlocked, buff)
                    if math.random() < 0.1 then
                        bearer:heal(damageBlocked, buff)
                    end
                end

                local damageEnemy = function()
                    enemy:damage(damageBlocked, buff)
                    if math.random() < 0.1 then
                        enemy:damage(damageBlocked, buff)
                    end
                end

                local cloneEnemy = function()
                    local cell = level:getEmptyCellNextTo(enemy:getPos());
                    if level:cellValid(cell) then
                        enemy:split(cell,0);
                    end
                end

                local turnToSheep = function()
                    if enemy:isBoss() then
                        return
                    end

                    local pos = enemy:getPos()
                    enemy:getSprite():emitter():burst( RPD.Sfx.ShadowParticle.CURSE, 6 )
                    RPD.playSound( "snd_cursed" )

                    enemy:getSprite():killAndErase();
                    enemy:destroy()
                    local sheep = RPD.spawnMob("Sheep",pos,{})
                    sheep.lifespan = math.random(3,5)
                    sheep:getSprite():emitter():burst(RPD.Sfx.Speck:factory(RPD.Sfx.Speck.WOOL ), 4)
                end

                local buffBearer = function()
                    local goodBuffs = {
                        "ManaShield",
                        "DieHard",
                        "BodyArmor",
                        "Blessed",
                        "Barkskin",
                        "Fury",
                        "Speed"
                    }

                    RPD.affectBuff(bearer,goodBuffs[math.random(#goodBuffs)],lvl * 2)
                end

                local curseEnemy = function()
                    local badBuffs = {
                        "Poison",
                        "Ooze",
                        "Charm",
                        "Slow",
                        "Sleep",
                        "Roots",
                        "Amok",
                        "Bleeding",
                        "Necrotism",
                        "Terror",
                        "Paralysis",
                        "Cripple",
                        "Stun",
                    }
                    RPD.affectBuff(enemy,badBuffs[math.random(#badBuffs)],lvl * 2)
                    enemy:getSprite():emitter():burst( RPD.Sfx.ShadowParticle.CURSE, 6 )
                    RPD.playSound( "snd_cursed" )
                end

                local effects = {healBearer, damageEnemy, cloneEnemy, buffBearer, curseEnemy, turnToSheep}
--[[
                for _, effect in ipairs(effects) do
                    effect()
                end
]]
                effects[math.random(#effects)]()

                return math.max(damage - shields.blockDamage(lvl,buffLevel), 0)
            else
                RPD.topEffect(buff.target:getPos(),"shield_broken")
                RPD.playSound("snd_shatter")
            end
        end
        return damage
    end
}
